openapi: 3.0.2
info:
  version: 1.0.0
  title: API Kbin.social
  description: "Aquesta es la documentació Open API de la API REST de la aplicació de Kbin desplegada a XXXX." #TODO: CANVIAR XXX

servers:
  - url: 'http://127.0.0.1:8000/api'
tags:
  - name: Link
    description: Tot sobre Links
    externalDocs:
      description: Find out more
      url: http://swagger.io #TODO: posar URL
  - name: Thread
    description: Tot sobre Threads
    externalDocs:
      description: Find out more
      url: http://swagger.io #TODO: posar o treure URL
  - name: User
    description: Tot sobre Users
  - name: Comment
    description: Tot sobre Comments
    externalDocs:
      description: Find out more
      url: http://swagger.io #TODO: posar o treure URL
paths:
  /users/:
    get:
      tags:
        - User
      summary: Obtenir tots els users i si s'ha indicat un token es mostra aquest en l'usuari corresponent
      responses:
        '200':
          description: Users obtinguts correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /u/{username}/:
    get:
      tags:
        - User
      summary: Obtenir info d'un user més les publicacions que ha fet, threads i links, ordenats per data de creació
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom d'user
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  data:
                    type: array
                    items:
                      # Cada element de l'array pot ser un dels dos tipus següents
                      oneOf:
                        - $ref: '#/components/schemas/Thread'
                        - $ref: '#/components/schemas/Link'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/{ordre}/:
    get:
      tags:
        - User
      summary: Obtenir info d'un user més les publicacions que ha fet, threads i links, ordenats segons ordre
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom de l'user
        - in: path
          name: ordre
          required: true
          schema:
            type: string
            enum: [ 'newest', 'top', 'commented' ]
          description: Ordre a seguir per a ordenar les publicacions
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  data:
                    type: array
                    items:
                      # Cada element de l'array pot ser un dels dos tipus següents
                      oneOf:
                        - $ref: '#/components/schemas/Thread'
                        - $ref: '#/components/schemas/Link'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrdreNotFoundError'
                  - $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/{ordre}/{filtre}/:
    get:
      tags:
        - User
      summary: Obtenir la informació d'un user més les seves publicacions, threads i/o links, depen del filtre i ordenades segons ordre
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom de l'user
        - in: path
          name: ordre
          required: true
          schema:
            type: string
            enum: [ 'newest', 'top', 'commented' ]
          description: Ordre a seguir per a ordenar les publicacions
        - in: path
          name: filtre
          required: true
          schema:
            type: string
            enum: [ 'tot', 'threads', 'links' ]
          description: Filtre per indicar quin tipus de publicacions s'obtenen
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  data:
                    type: array
                    items:
                      # Cada element de l'array pot ser un dels dos tipus següents
                      oneOf:
                        - $ref: '#/components/schemas/Thread'
                        - $ref: '#/components/schemas/Link'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/FiltreNotFoundError'
                  - $ref: '#/components/schemas/OrdreNotFoundError'
                  - $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/boosts/:
    get:
      tags:
        - User
      summary: Obtenir la informació d'un user més les publicacions que ha fet boost ordenats per data de creació, s'ha d'indicar el token que coincideix amb l'user. Estan ordenats per data de creació
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom d'user
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  data:
                    type: array
                    items:
                      # Cada element de l'array pot ser un dels dos tipus següents
                      oneOf:
                        - $ref: '#/components/schemas/Thread'
                        - $ref: '#/components/schemas/Link'
        '400':
          description: El token no correspon a aquest User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'
        '401':
          description: User no està autentificat per a fer aquesta consulta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/comments/:
    get:
      tags:
        - User
      summary: Obtenir info d'un user més els seus comentaris ordenats per data de creació
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom d'user
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/comments/{ordre}/:
    get:
      tags:
        - User
      summary: Obtenir info d'un user més els seus comentaris ordenats segons ordre
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom d'user
        - in: path
          name: ordre
          required: true
          schema:
            type: string
            enum: [ 'newest', 'top', 'commented' ]
          description: Ordre a seguir per a ordenar les publicacions
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrdreNotFoundError'
                  - $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/boosts/{ordre}/:
    get:
      tags:
        - User
      summary: Obtenir la informació d'un user més les publicacions que ha fet boost ordenades segons ordre
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom de l'user
        - in: path
          name: ordre
          required: true
          schema:
            type: string
            enum: [ 'newest', 'top', 'commented' ]
          description: Ordre a seguir per a ordenar les publicacions
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  data:
                    type: array
                    items:
                      # Cada element de l'array pot ser un dels dos tipus següents
                      oneOf:
                        - $ref: '#/components/schemas/Thread'
                        - $ref: '#/components/schemas/Link'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OrdreNotFoundError'
                  - $ref: '#/components/schemas/UserNotFoundError'

  /u/{username}/boosts/{ordre}/{filtre}/:
    get:
      tags:
        - User
      summary: Obtenir la informació d'un user més les publicacions que ha fet boost. Es mostren els threads i/o links depenent del filtre i ordenades segons ordre
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Nom de l'user
        - in: path
          name: ordre
          required: true
          schema:
            type: string
            enum: [ 'newest', 'top', 'commented' ]
          description: Ordre a seguir per a ordenar les publicacions
        - in: path
          name: filtre
          required: true
          schema:
            type: string
            enum: [ 'tot', 'threads', 'links' ]
          description: Filtre per indicar quin tipus de publicacions s'obtenen
      responses:
        '200':
          description: Informació de l'usuari obtinguda correctament
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  data:
                    type: array
                    items:
                      # Cada element de l'array pot ser un dels dos tipus següents
                      oneOf:
                        - $ref: '#/components/schemas/Thread'
                        - $ref: '#/components/schemas/Link'
        '404':
          description: El recurs demanat no s'ha trobat
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/FiltreNotFoundError'
                  - $ref: '#/components/schemas/OrdreNotFoundError'
                  - $ref: '#/components/schemas/UserNotFoundError'
  /publicacions/{id_thread}/comments/:
    get:
      tags:
        - Comment
      summary: Obtenir tots els comentaris d'un thread
      parameters:
        - in: path
          name: id_thread
          required: true
          schema:
            type: integer
          description: ID del thread
      responses:
        '200':
          description: Comentaris obtinguts correctament
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '404':
          description: No existeix un thread amb aquesta ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicacioNotFoundError'

components:
  schemas:
    Comment:
      type: object
      properties:
        author:
          type: string
          description: Autor del comment
          example: "user123"
        body:
          type: string
          description: Contigut del comentari
          example: "Aquest és el body del comentari"
        creation_data:
          type: string
          format: date-time
          description: Data de la creació del comment
          example: "2024-03-29T00:00:00Z"
        last_edited:
          type: string
          format: date-time
          description: Data de l'última edició del comment
          example: "2024-03-30T00:00:00Z"
        num_likes:
          type: integer
          description: Número de likes del comment
          example: 2
        num_dislikes:
          type: integer
          description: Número de dislikes del comment
          example: 4
        level: # TODO
          type: integer
          description: ID del link
          example: 2
        parent:
          type: string
          description: URL del link del thread
          example: "http://127.0.0.1:8000/api/threads/2/"
        replies:
          type: array
          description: Respostes al comentari
          items:
              $ref: '#/components/schemas/Comment'
          example:
          - author: "user123"
            body: "Aquest és el body del comentari"
            creation_data: "2024-03-29T00:00:00Z"
            last_edited: "2024-03-30T00:00:00Z"
            num_likes: 2
            num_dislikes: 4
            level: 2
            parent: "http://127.0.0.1:8000/api/threads/2/"
            replies: []
    Link:
      type: object
      properties:
        id:
          type: integer
          description: ID del link
          example: 2
        num_likes:
          type: integer
          description: Nombre de likes del link
          example: 10
        num_dislikes:
          type: integer
          description: Nombre de dislikes del link
          example: 3
        author:
          type: string
          description: Autor del link
          example: "El meu nom"
        title:
          type: string
          description: Titol del link
          example: "El titol"
        body:
          type: string
          description: Body del link
          example: "El meu Body"
        creation_data:
          type: string
          format: date-time
          description: Data de creació del link
        num_comments:
          type: integer
          description: Nombre de comentaris del link
          example: 2
        num_boosts:
          type: integer
          description: Nombre de boosts del link
          example: 1
        magazine:
          type: string
          description: Magazine del link
          example: "La meva magazine"
        url:
          type: string
          description: URL del link
          example: "www.raco.fib.upc.edu"
    Thread:
      type: object
      properties:
        id:
          type: integer
          description: ID del thread
          example: 2
        num_likes:
          type: integer
          description: Nombre de likes del thread
          example: 10
        num_dislikes:
          type: integer
          description: Nombre de dislikes del thread
          example: 3
        author:
          type: string
          description: Autor del thread
          example: "El meu nom"
        title:
          type: string
          description: Titol del thread
          example: "El titol"
        body:
          type: string
          description: Body del thread
          example: "El meu Body"
        creation_data:
          type: string
          format: date-time
          description: Data de creació del thread
        num_comments:
          type: integer
          description: Nombre de comentaris del thread
          example: 2
        num_boosts:
          type: integer
          description: Nombre de boosts del thread
          example: 1
        magazine:
          type: string
          description: Magazine del thread
          example: "La meva magazine"

    User:
      type: object
      properties:
        username:
          type: string
          description: ID de l'user
          example: "user123"
        description:
          type: string
          description: Descripció de l'user
          example: "Aquesta és la meva descripció"
        token:
          type: string
          description: Token de l'user
          example: "asd76/32ASH1"
        cover:
          type: string
          description: URL de la imatge de la cover de l'user
          example: "https://bravo13-bucket.s3.amazonaws.com/cover"
        avatar:
          type: string
          description: URL de la imatge de l'avatar de l'user
          example: "https://bravo13-bucket.s3.amazonaws.com/avatar"
        email:
          type: string
          description: Correu electrònic de l'user
          example: "user123@gmail.com"
        total_threads:
          type: integer
          description: Número de publicacions (threads i links) creats per l'user
          example: 12
        total_comments:
          type: integer
          description: Número de comments creats per l'user
          example: 24
        total_boosts:
          type: integer
          description: Número de boosts fets per l'user
          example: 48

    FiltreNotFoundError:
      type: object
      properties:
        error:
          type: string
      example:
        error: El filtre sol·licitat no ha estat trobat

    OrdreNotFoundError:
      type: object
      properties:
        error:
          type: string
      example:
        error: L'ordre sol·licitat no ha estat trobat

    UserNotFoundError:
      type: object
      properties:
        error:
          type: string
      example:
        error: El usuario solicitado no fue encontrado

    PublicacioNotFoundError:
      type: object
      properties:
        error:
          type: string
      example:
        error: No hi ha cap publicacio amb ID 0